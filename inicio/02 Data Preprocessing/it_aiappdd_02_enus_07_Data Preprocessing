{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.2"},"colab":{"name":"it_aiappdd_02_enus_07_Data Preprocessing","provenance":[{"file_id":"https://github.com/SagarGaniga/Data-Preprocessing/blob/master/Data_preprocessing_on_diabetes_dataset.ipynb","timestamp":1584808448976}],"collapsed_sections":[],"toc_visible":true}},"cells":[{"cell_type":"code","metadata":{"id":"dJ-MNeYpD3X7","colab_type":"code","colab":{}},"source":["import pandas as pd"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"9tPuF9zsuAso","colab_type":"text"},"source":["Data Pre-Processing \n","\n","In this notebook, we will see the basics of data-preprocesing on Google Collab Enviornment. You will be abel to see how Python has made the process easier for any data to be processed and ready for AI. "]},{"cell_type":"markdown","metadata":{"id":"9QbePH0RuEH4","colab_type":"text"},"source":["Collab OverView \n","  - Online Notebook\n","  - No need to install any library \n","  - No environment Setup \n","  - ~12 GB ram Machine \n","  - You can get GPU Machine"]},{"cell_type":"code","metadata":{"id":"zddDnxh-7NTV","colab_type":"code","colab":{}},"source":["# Import Libraries\n","import numpy as np  # For any array level computations \n","import pandas as pd  # For converting csv/excel data into tabular data structure. "],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Bg97bRSR7NTh","colab_type":"text"},"source":["# Handling Missing Values"]},{"cell_type":"code","metadata":{"id":"489zSeWq7NTm","colab_type":"code","colab":{}},"source":["# Reading data using Pandas\n","df1 = pd.read_csv('/content/health_data')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"DXD7ZcnPCjC7","colab_type":"code","outputId":"762b520b-34f6-40d7-866c-84e99951bdfc","executionInfo":{"status":"ok","timestamp":1586525013571,"user_tz":-330,"elapsed":887,"user":{"displayName":"Tushit Dave","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gik4OKoqYZMqlsb_TsLeVLPQHgaNo_XIoszgMjN=s64","userId":"01319629895883779210"}},"colab":{"base_uri":"https://localhost:8080/","height":195}},"source":["# Printing top 5 observations\n","df1.head()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>Pregnancies</th>\n","      <th>Glucose</th>\n","      <th>BloodPressure</th>\n","      <th>SkinThickness</th>\n","      <th>Insulin</th>\n","      <th>BMI</th>\n","      <th>DiabetesPedigreeFunction</th>\n","      <th>Age</th>\n","      <th>Outcome</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>148.0</td>\n","      <td>72.0</td>\n","      <td>35.0</td>\n","      <td>NaN</td>\n","      <td>33.6</td>\n","      <td>0.627</td>\n","      <td>5</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>85.0</td>\n","      <td>66.0</td>\n","      <td>29.0</td>\n","      <td>NaN</td>\n","      <td>26.6</td>\n","      <td>0.351</td>\n","      <td>31</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>8</td>\n","      <td>183.0</td>\n","      <td>64.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>23.3</td>\n","      <td>0.672</td>\n","      <td>32</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>89.0</td>\n","      <td>66.0</td>\n","      <td>23.0</td>\n","      <td>94.0</td>\n","      <td>28.1</td>\n","      <td>0.167</td>\n","      <td>21</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>137.0</td>\n","      <td>4.0</td>\n","      <td>35.0</td>\n","      <td>168.0</td>\n","      <td>43.1</td>\n","      <td>2.288</td>\n","      <td>33</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Unnamed: 0  Pregnancies  Glucose  ...  DiabetesPedigreeFunction  Age  Outcome\n","0           0            6    148.0  ...                     0.627    5        1\n","1           1            1     85.0  ...                     0.351   31        0\n","2           2            8    183.0  ...                     0.672   32        1\n","3           3            1     89.0  ...                     0.167   21        0\n","4           4            0    137.0  ...                     2.288   33        1\n","\n","[5 rows x 10 columns]"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"code","metadata":{"id":"ipwwiIFLCn2f","colab_type":"code","outputId":"142ee6ab-3ce2-47d9-8d83-d5a5800b49d3","executionInfo":{"status":"ok","timestamp":1586525019949,"user_tz":-330,"elapsed":954,"user":{"displayName":"Tushit Dave","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gik4OKoqYZMqlsb_TsLeVLPQHgaNo_XIoszgMjN=s64","userId":"01319629895883779210"}},"colab":{"base_uri":"https://localhost:8080/","height":202}},"source":["df1.isnull().sum().sort_values(ascending=False)# Finding Null Values If any"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Insulin                     374\n","SkinThickness               227\n","BloodPressure                35\n","BMI                          11\n","Glucose                       5\n","Outcome                       0\n","Age                           0\n","DiabetesPedigreeFunction      0\n","Pregnancies                   0\n","Unnamed: 0                    0\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"id":"8IcPPW6TGOwJ","colab_type":"code","outputId":"8fe43c14-6568-415b-a8d4-0c8f52f03e8c","executionInfo":{"status":"ok","timestamp":1586525021181,"user_tz":-330,"elapsed":1348,"user":{"displayName":"Tushit Dave","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gik4OKoqYZMqlsb_TsLeVLPQHgaNo_XIoszgMjN=s64","userId":"01319629895883779210"}},"colab":{"base_uri":"https://localhost:8080/","height":151}},"source":["# dropping NA Values\n","df_no_missing = df1.dropna(axis=0)\n","print(df_no_missing.head(5))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["    Unnamed: 0  Pregnancies  Glucose  ...  DiabetesPedigreeFunction  Age  Outcome\n","3            3            1     89.0  ...                     0.167   21        0\n","4            4            0    137.0  ...                     2.288   33        1\n","6            6            3     78.0  ...                     0.248   26        1\n","8            8            2    197.0  ...                     0.158   53        1\n","13          13            1    189.0  ...                     0.398   59        1\n","\n","[5 rows x 10 columns]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"d3xCrGqdD0ub","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"RftCgkP87NTy","colab_type":"text"},"source":["## Fill with mean"]},{"cell_type":"code","metadata":{"id":"RYCi8LpJ7NT0","colab_type":"code","outputId":"801ef8c0-d6bb-44bb-e923-8e8f41fb480a","executionInfo":{"status":"ok","timestamp":1586525023340,"user_tz":-330,"elapsed":1478,"user":{"displayName":"Tushit Dave","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gik4OKoqYZMqlsb_TsLeVLPQHgaNo_XIoszgMjN=s64","userId":"01319629895883779210"}},"colab":{"base_uri":"https://localhost:8080/","height":151}},"source":["from sklearn.impute import SimpleImputer\n","\n","df1 = pd.read_csv('/content/health_data', na_values=['#NAME?'])\n","#Imputer to replace Null with mean\n","imputer = SimpleImputer(missing_values= np.NAN, strategy= 'mean', fill_value=None, verbose=0, copy=True)\n","\n","imputer.fit(df1)\n","df1 = pd.DataFrame(data=imputer.transform(df1), columns=df1.columns)\n","\n","#print\n","print(df1.head(5))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["   Unnamed: 0  Pregnancies  Glucose  ...  DiabetesPedigreeFunction   Age  Outcome\n","0         0.0          6.0    148.0  ...                     0.627   5.0      1.0\n","1         1.0          1.0     85.0  ...                     0.351  31.0      0.0\n","2         2.0          8.0    183.0  ...                     0.672  32.0      1.0\n","3         3.0          1.0     89.0  ...                     0.167  21.0      0.0\n","4         4.0          0.0    137.0  ...                     2.288  33.0      1.0\n","\n","[5 rows x 10 columns]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"7QQS9fcy7NT-","colab_type":"text"},"source":["## Fill with median"]},{"cell_type":"code","metadata":{"id":"HDl8gfYV7NUA","colab_type":"code","outputId":"843a60fd-b2d5-4368-ae50-15ee11ebdffe","executionInfo":{"status":"ok","timestamp":1586525025913,"user_tz":-330,"elapsed":1005,"user":{"displayName":"Tushit Dave","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gik4OKoqYZMqlsb_TsLeVLPQHgaNo_XIoszgMjN=s64","userId":"01319629895883779210"}},"colab":{"base_uri":"https://localhost:8080/","height":151}},"source":["from sklearn.impute import SimpleImputer\n","\n","# Data from excel\n","df1 = pd.read_csv('/content/health_data', na_values=['#NAME?'])\n","\n","#Imputer to replace Null with mean\n","imputer = SimpleImputer(missing_values= np.NAN, strategy= 'median', fill_value=None, verbose=0, copy=True)\n","\n","imputer.fit(df1)\n","df1 = pd.DataFrame(data=imputer.transform(df1), columns=df1.columns)\n","\n","#print\n","print(df1.head(5))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["   Unnamed: 0  Pregnancies  Glucose  ...  DiabetesPedigreeFunction   Age  Outcome\n","0         0.0          6.0    148.0  ...                     0.627   5.0      1.0\n","1         1.0          1.0     85.0  ...                     0.351  31.0      0.0\n","2         2.0          8.0    183.0  ...                     0.672  32.0      1.0\n","3         3.0          1.0     89.0  ...                     0.167  21.0      0.0\n","4         4.0          0.0    137.0  ...                     2.288  33.0      1.0\n","\n","[5 rows x 10 columns]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"qERXyloq7NUI","colab_type":"text"},"source":["## Function to find outliers"]},{"cell_type":"code","metadata":{"id":"89s8ur2L7NUK","colab_type":"code","colab":{}},"source":["def find_outliers_tukey(x):\n","    q1 = x.quantile(.25)\n","    q3 = x.quantile(.75)\n","    iqr = q3 - q1\n","    floor = q1 - 1.5*iqr\n","    ceiling = q3 + 1.5*iqr\n","    outlier_indices = list(x.index[(x < floor) | (x > ceiling)])\n","    outlier_values = list(x[outlier_indices])\n","    return outlier_indices, outlier_values\n"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"VW7K82MJ7NUR","colab_type":"text"},"source":["## Outliers Found in each column"]},{"cell_type":"code","metadata":{"id":"Yg_7MiKF7NUT","colab_type":"code","outputId":"7265d8d3-c0d2-4bef-9c19-a023defcbb91","executionInfo":{"status":"ok","timestamp":1586525030138,"user_tz":-330,"elapsed":896,"user":{"displayName":"Tushit Dave","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gik4OKoqYZMqlsb_TsLeVLPQHgaNo_XIoszgMjN=s64","userId":"01319629895883779210"}},"colab":{"base_uri":"https://localhost:8080/","height":890}},"source":["glucose_indices, glucose_values = find_outliers_tukey(df1['Glucose'])\n","print(\"Outliers for Glucose\")\n","print(np.sort(glucose_values))\n","\n","print(\"Outliers for Pregnancies\")\n","pr_indices, pr_values = find_outliers_tukey(df1['Pregnancies'])\n","print(np.sort(pr_values))\n","\n","print(\"Outliers for BloodPressure\")\n","bp_indices, bp_values = find_outliers_tukey(df1['BloodPressure'])\n","print(np.sort(bp_values))\n","\n","\n","print(\"Outliers for SkinThickness\")\n","st_indices, st_values = find_outliers_tukey(df1['SkinThickness'])\n","print(np.sort(st_values))\n","\n","print(\"Outliers for Insulin\")\n","in_indices, in_values = find_outliers_tukey(df1['Insulin'])\n","print(np.sort(in_values))\n","\n","print(\"Outliers for BMI\")\n","bmi_indices, bmi_values = find_outliers_tukey(df1['BMI'])\n","print(np.sort(bmi_values))\n","\n","print(\"Outliers for DiabetesPedigreeFunction\")\n","dpf_indices, dpf_values = find_outliers_tukey(df1['DiabetesPedigreeFunction'])\n","print(np.sort(dpf_values))\n","\n","print(\"Outliers for Age\")\n","age_indices, age_values = find_outliers_tukey(df1['Age'])\n","print(np.sort(age_values))\n"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Outliers for Glucose\n","[]\n","Outliers for Pregnancies\n","[14. 14. 15. 17.]\n","Outliers for BloodPressure\n","[122.]\n","Outliers for SkinThickness\n","[ 1.  1.  1.  1.  1.  2.  2.  2.  2.  2.  2.  2.  2.  2.  2.  2.  2.  2.\n","  3.  3.  3.  3.  3.  3.  3.  3.  3.  3.  3.  3.  3.  3.  3.  3.  3.  3.\n","  3.  3.  3.  3.  3.  3.  3.  3.  3.  4.  4.  4.  4.  4.  4.  4.  4.  4.\n","  4.  4.  4.  4.  4.  4.  4.  5.  5.  5.  6. 48. 48. 48. 48. 49. 49. 49.\n"," 51. 52. 52. 54. 54. 56. 63. 99.]\n","Outliers for Insulin\n","[  1.   1.   1.   1.   1.   1.   1.   2.   2.   2.   2.   3.   4.   4.\n","   5.   5.   5.   6.   6.   6.   7.   7.   7.   9.   9.   9.   9.  11.\n","  11.  11.  11.  11.  11.  12.  12.  12.  12.  12.  12.  12.  12.  13.\n","  13.  13.  13.  13.  13.  13.  13.  13.  14.  14.  14.  14.  14.  14.\n","  14.  14.  14.  14.  15.  15.  15.  15.  15.  15.  15.  15.  15.  15.\n","  15.  15.  15.  15.  16.  16.  16.  16.  16.  16.  16.  16.  17.  17.\n","  18.  18.  18.  18.  18.  18.  18.  18.  18.  18.  19.  19.  19.  19.\n","  21.  21.  21.  21.  21.  22.  22.  22.  23.  23.  23.  23.  24.  24.\n","  24.  25.  25.  25.  25.  27.  27.  27.  28.  29.  31.  32.  33.  34.\n","  36.  36.  36.  36.  37.  37.  37.  38.  41.  42.  42.  43.  44.  44.\n","  44.  44.  45.  45.  45.  46.  48.  48.  48.  48.  48.  49.  49.  49.\n","  49.  49.  51.  51.  52.  53.  53.  54.  54.  54.  54.  54.  55.  55.\n","  56.  56.  56.  56.  56.  84.  85.  85.  86.  87.  87.  88.  88.  88.\n","  88.  89.  91.  92.  92.  92.  94.  94.  94.  94.  94.  94.  94.  95.\n","  95.  96.  96.  99.  99. 112. 114. 114. 115. 115. 115. 115. 115. 115.\n"," 116. 116. 119. 122. 122. 125. 125. 125. 125. 126. 126. 126. 127. 128.\n"," 129. 132. 132. 135. 135. 135. 135. 135. 135. 142. 144. 144. 145. 145.\n"," 145. 146. 148. 148. 152. 152. 155. 155. 155. 155. 156. 156. 156. 158.\n"," 158. 159. 165. 165. 165. 165. 166. 167. 167. 168. 168. 168. 168. 171.\n"," 175. 175. 175. 176. 176. 176. 178. 182. 182. 182. 183. 184. 185. 185.\n"," 188. 191. 192. 192. 193. 194. 194. 194. 196. 215. 215. 215. 225. 225.\n"," 228. 231. 231. 235. 237. 245. 249. 255. 258. 265. 265. 271. 272. 274.\n"," 275. 277. 278. 284. 285. 285. 291. 293. 293. 318. 321. 325. 325. 325.\n"," 326. 328. 335. 342. 375. 387. 392. 415. 465. 474. 478. 485. 495. 495.\n"," 543. 545. 579. 744. 846.]\n","Outliers for BMI\n","[ 2.   2.1  2.4  2.4  2.8  2.8  3.   3.   3.   3.   3.   3.   3.   3.1\n","  3.1  3.1  3.1  3.1  3.1  3.1  3.1  3.1  3.2  3.3  3.4  3.4  3.4  3.4\n","  3.4  3.4  3.4  3.5  3.5  3.5  3.5  3.5  3.5  3.5  3.7  3.8  3.8  3.8\n","  3.8  3.8  3.8  3.8  3.8  3.8  3.9  3.9  3.9  3.9  3.9  4.   4.   4.1\n","  4.2  4.5  4.5  4.5  4.6  4.6  4.6  4.6  4.7  4.8  4.9  4.9  5.  52.3\n"," 52.3 52.9 53.2 55.  57.3 59.4 67.1]\n","Outliers for DiabetesPedigreeFunction\n","[1.251 1.258 1.268 1.282 1.292 1.318 1.321 1.34  1.353 1.39  1.391 1.394\n"," 1.4   1.441 1.461 1.476 1.57  1.6   1.698 1.699 1.72  1.731 1.76  1.781\n"," 1.893 1.95  1.96  2.137 2.288 2.329 2.42 ]\n","Outliers for Age\n","[62. 62. 62. 62. 63. 63. 63. 63. 64. 65. 65. 65. 66. 66. 66. 66. 67. 67.\n"," 67. 68. 69. 69. 72. 81.]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"z7wvBzYy7NUc","colab_type":"text"},"source":["## Deleting Row"]},{"cell_type":"code","metadata":{"scrolled":true,"id":"teKGnmLb7NUf","colab_type":"code","outputId":"c56c7077-ff1b-44be-fe72-1c8f63689ad7","executionInfo":{"status":"ok","timestamp":1586525034670,"user_tz":-330,"elapsed":1350,"user":{"displayName":"Tushit Dave","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gik4OKoqYZMqlsb_TsLeVLPQHgaNo_XIoszgMjN=s64","userId":"01319629895883779210"}},"colab":{"base_uri":"https://localhost:8080/","height":151}},"source":["df_del = df1.drop(bp_indices)\n","print(df_del.head(5))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["   Unnamed: 0  Pregnancies  Glucose  ...  DiabetesPedigreeFunction   Age  Outcome\n","0         0.0          6.0    148.0  ...                     0.627   5.0      1.0\n","1         1.0          1.0     85.0  ...                     0.351  31.0      0.0\n","2         2.0          8.0    183.0  ...                     0.672  32.0      1.0\n","3         3.0          1.0     89.0  ...                     0.167  21.0      0.0\n","4         4.0          0.0    137.0  ...                     2.288  33.0      1.0\n","\n","[5 rows x 10 columns]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"oSdszTBY7NUl","colab_type":"text"},"source":["## Replace with min"]},{"cell_type":"code","metadata":{"id":"8X0yL-kV7NUn","colab_type":"code","outputId":"bfcaf093-bc3f-42da-d1b1-9ed24e875a33","executionInfo":{"status":"ok","timestamp":1586525047950,"user_tz":-330,"elapsed":964,"user":{"displayName":"Tushit Dave","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gik4OKoqYZMqlsb_TsLeVLPQHgaNo_XIoszgMjN=s64","userId":"01319629895883779210"}},"colab":{"base_uri":"https://localhost:8080/","height":151}},"source":["min_in = np.min(df_del['Insulin'])\n","df_del['Insulin'] = np.where(df_del['Insulin'] > 321, min_in, df_del['Insulin'])\n","print(df_del.head(5))\n"],"execution_count":0,"outputs":[{"output_type":"stream","text":["   Unnamed: 0  Pregnancies  Glucose  ...  DiabetesPedigreeFunction   Age  Outcome\n","0         0.0          6.0    148.0  ...                     0.627   5.0      1.0\n","1         1.0          1.0     85.0  ...                     0.351  31.0      0.0\n","2         2.0          8.0    183.0  ...                     0.672  32.0      1.0\n","3         3.0          1.0     89.0  ...                     0.167  21.0      0.0\n","4         4.0          0.0    137.0  ...                     2.288  33.0      1.0\n","\n","[5 rows x 10 columns]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"cLD5_qCU7NUy","colab_type":"text"},"source":["## Normalization and Reduction"]},{"cell_type":"code","metadata":{"id":"5Y4C_9AY7NU1","colab_type":"code","outputId":"1963c840-714a-4f4e-9bdc-14544845cd36","executionInfo":{"status":"ok","timestamp":1586525049051,"user_tz":-330,"elapsed":941,"user":{"displayName":"Tushit Dave","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gik4OKoqYZMqlsb_TsLeVLPQHgaNo_XIoszgMjN=s64","userId":"01319629895883779210"}},"colab":{"base_uri":"https://localhost:8080/","height":195}},"source":["from sklearn.decomposition import PCA\n","pca = PCA(n_components = 2)\n","pca.fit(df_del)\n","\n","PCA(copy=True, n_components=2, whiten=False)\n","\n","df = pca.transform(df_del)\n","\n","df_2d = pd.DataFrame(df)\n","\n","df_2d.index = df_del.index\n","\n","df_2d.columns = ['PC1', 'PC2']\n","\n","df_2d.head(5)\n","\n"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PC1</th>\n","      <th>PC2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>383.766455</td>\n","      <td>32.733631</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>382.861591</td>\n","      <td>-14.094426</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>381.699341</td>\n","      <td>58.662672</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>380.941816</td>\n","      <td>4.017180</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>380.096737</td>\n","      <td>89.113454</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["          PC1        PC2\n","0  383.766455  32.733631\n","1  382.861591 -14.094426\n","2  381.699341  58.662672\n","3  380.941816   4.017180\n","4  380.096737  89.113454"]},"metadata":{"tags":[]},"execution_count":13}]}]}